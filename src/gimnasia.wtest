import gimnasia.*

describe "PUNTO 1: Rutinas." {

	const correrEnLaPlaya = new Running(intensidad = 1.2) // Una actividad de running con intensisdad 1.2
	const maratonBA = new Maraton(intensidad = 1.5) // Una maraton con intensidad 1.5
	const remarEnElDelta = new Remo() // Una actividad de remo
	const remarEnCaminoRemeros = new RemoCompetitivo() // Una actividad de remo comptetitivo

	test "1.1: Consulta Running." {
		assert.equals(360, correrEnLaPlaya.cuantasCaloriasQuemaEn(5)) // Deberia gastar 360 calorias al practicarse por 5 minutos.
		assert.equals(10200, correrEnLaPlaya.cuantasCaloriasQuemaEn(90)) // Deberia gastar 10200 calorias al practicarse por 90 minutos.
	}

	test "1.2: Consulta Maraton." {
		assert.equals(900, maratonBA.cuantasCaloriasQuemaEn(5)) // Deberia gastar 900 calorias al practicarse por 5 minutos.
		assert.equals(25500, maratonBA.cuantasCaloriasQuemaEn(90)) // Deberia gastar 25500 calorias al practicarse por 90 minutos.
	}

	test "1.3: Consulta Remo." {
		assert.equals(520, remarEnElDelta.cuantasCaloriasQuemaEn(5)) // Deberia gastar 520 calorias al practicarse por 5 minutos.
		assert.equals(9360, remarEnElDelta.cuantasCaloriasQuemaEn(90)) // Deberia gastar 9360 calorias al practicarse por 90 minutos.
	}
	
	test "1.4: Consulta Remo Competitivo." {
		assert.equals(510, remarEnCaminoRemeros.cuantasCaloriasQuemaEn(5)) // Deberia gastar 510 calorias al practicarse por 5 minutos.
		assert.equals(12750, remarEnCaminoRemeros.cuantasCaloriasQuemaEn(90)) // Deberia gastar 12750 calorias al practicarse por 90 minutos.
	}
}

describe "PUNTO 2: Personas." {

	//ATENCION: usar el metodo truncate(3) para truncar un numero a 3 decimales
	// Ej: 1.2345.truncate(3) -> devuelve 1.234 

	//const calamardo = //Una persona Sedentaria con peso 60 y tiempo de ejercicio 5
	//const bob =  // Una persona atleta con peso 40 

	test "2.1.1 test sedentario running" {
		// hacer que calamardo practique correrEnLaPlaya
		// el peso de calamardo debería ser 59.948 (truncado a 3 decimales)
	}
	
	test "2.1.2 test sedentario maraton" {
		// hacer que calamardo practique maratonBA
		// el peso de calamardo debería ser 59.871 (truncado a 3 decimales)
	}

	test "2.1.3 test sedentario remo" {
		// hacer que calamardo practique remarEnElDelta
		// el peso de calamardo debería ser 59.925 (truncado a 3 decimales)
	}

	test "2.1.3 test sedentario remo competicion" {
		// hacer que calamardo practique remarEnCaminoRemeros
		// el peso de calamardo debería ser 59.927 (truncado a 3 decimales)
	}

	test "2.1.5 test sedentario no puede practicar" {
		// Hacer que el peso de calamardo sea 40
		// hacer que calamardo practique correrEnLaPlaya (NO SE PUEDE!)
		// el peso de calamardo debería ser 40 
	}

	test "2.2.1 test atleta running" {
		// hacer que bob practique correrEnLaPlaya
		// el peso de bob debería ser 39.725 (truncado a 3 decimales)
	}

	test "2.2.2 test atleta maraton" {
		// hacer que bob practique maratonBA
		// el peso de bob debería ser 37.812 (truncado a 3 decimales)
	}

	test "2.2.3 test atleta remo" {
		// hacer que bob practique remarEnElDelta( NO SE PUEDE!)
		// el peso de bob debería ser 40 
	}
	
	test "2.2.3 test atleta remo de competición" {
		// hacer que bob practique remarEnCaminoRemeros
		// el peso de bob debería ser 39.406
	}
}

describe "PUNTO 3: Consultas." {

	//const nautico = //un predio con remarEnElDelta y remarEnCaminoRemeros
	//const clubBarrial = //un club con recreo y nautico

	test "3.1 el mejor predio" {
		//El mejor predio del clubBarrial para bob debería ser recreo		
		//El mejor predio del clubBarrial para calamardo debería ser recreo		
	}
	
	test "3.2 predios tranquis" {
		//No debería haber predios tranquis en el clubBarrial para bob
		//Los predios tranquis del clubBarrial para calamardo solo incluyen a recreo  
	}
	
	test "3.3 rutinas más exigentes" {
		//Las rutinas más exigentes del clubBarrial para bob son maratonBA y remarEnCaminoRemeros
		//Las rutinas más exigentes del clubBarrial para calamardo son maratonBA y remarEnElDelta
	}
}